// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProjectAPI_Travel.Data;

#nullable disable

namespace MyProjectAPI_Travel.Migrations
{
    [DbContext(typeof(MyProjectTravelContext))]
    partial class MyProjectTravelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Bus", b =>
                {
                    b.Property<int>("IdBus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_bus");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBus"));

                    b.Property<bool>("Availability")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("availability");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<int>("NumColumns")
                        .HasColumnType("int")
                        .HasColumnName("num_columns");

                    b.Property<int>("NumRows")
                        .HasColumnType("int")
                        .HasColumnName("num_rows");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("placa");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("state");

                    b.HasKey("IdBus");

                    b.ToTable("TbBus");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Itinerary", b =>
                {
                    b.Property<int>("IdItn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_itn");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItn"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime")
                        .HasColumnName("arrival_date");

                    b.Property<bool>("Availability")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("availability");

                    b.Property<int>("IdBus")
                        .HasColumnType("int")
                        .HasColumnName("id_bus");

                    b.Property<int>("IdDestination")
                        .HasColumnType("int")
                        .HasColumnName("id_destination");

                    b.Property<int>("IdOrigin")
                        .HasColumnType("int")
                        .HasColumnName("id_origin");

                    b.Property<int>("IdWrk")
                        .HasColumnType("int")
                        .HasColumnName("id_wrk");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("state");

                    b.HasKey("IdItn");

                    b.HasIndex("IdBus");

                    b.HasIndex("IdDestination");

                    b.HasIndex("IdOrigin");

                    b.HasIndex("IdWrk");

                    b.ToTable("TbItineraries");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Seat", b =>
                {
                    b.Property<int>("IdBus")
                        .HasColumnType("int")
                        .HasColumnName("id_bus");

                    b.Property<int>("Column")
                        .HasColumnType("int")
                        .HasColumnName("column");

                    b.Property<int>("Row")
                        .HasColumnType("int")
                        .HasColumnName("row");

                    b.Property<bool>("Busy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("busy");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("state");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("tipo");

                    b.HasKey("IdBus", "Column", "Row");

                    b.ToTable("TbSeating");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Station", b =>
                {
                    b.Property<int>("IdStn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_stn");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStn"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("pseudonym");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("street");

                    b.HasKey("IdStn");

                    b.ToTable("TbStations");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Ticket", b =>
                {
                    b.Property<int>("IdTck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tck");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTck"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("age");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("Column")
                        .HasColumnType("int")
                        .HasColumnName("column");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdBus")
                        .HasColumnType("int")
                        .HasColumnName("id_bus");

                    b.Property<int>("IdItn")
                        .HasColumnType("int")
                        .HasColumnName("id_itn");

                    b.Property<int>("IdUsr")
                        .HasColumnType("int")
                        .HasColumnName("id_usr");

                    b.Property<int>("IdWrk")
                        .HasColumnType("int")
                        .HasColumnName("id_wrk");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastname");

                    b.Property<string>("NumDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("num_document");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payment_method");

                    b.Property<bool>("Problem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("problem");

                    b.Property<string>("ProblemDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("problem_description");

                    b.Property<int>("Row")
                        .HasColumnType("int")
                        .HasColumnName("row");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("state");

                    b.Property<string>("TypeDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type_document");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("IdTck");

                    b.HasIndex("IdBus");

                    b.HasIndex("IdItn");

                    b.HasIndex("IdUsr");

                    b.HasIndex("IdWrk");

                    b.ToTable("TbTickets");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.User", b =>
                {
                    b.Property<int>("IdUsr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usr");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsr"));

                    b.Property<bool>("Ban")
                        .HasColumnType("bit")
                        .HasColumnName("ban");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birtdate");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lastname");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mail");

                    b.Property<string>("NumDocument")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("num_document");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registration_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("state");

                    b.Property<string>("TypeDocument")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type_document");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("IdUsr");

                    b.ToTable("TbUsers");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Worker", b =>
                {
                    b.Property<int>("IdWrk")
                        .HasColumnType("int")
                        .HasColumnName("id_wrk");

                    b.Property<bool>("Availability")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("availability");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("registration_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("salary");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("state");

                    b.HasKey("IdWrk");

                    b.ToTable("TbWorkers");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Itinerary", b =>
                {
                    b.HasOne("MyProjectAPI_Travel.Models.Bus", "Bus")
                        .WithMany("Itineraries")
                        .HasForeignKey("IdBus")
                        .IsRequired()
                        .HasConstraintName("FK_tb_itinerary_bus");

                    b.HasOne("MyProjectAPI_Travel.Models.Station", "Destination")
                        .WithMany("Destinations")
                        .HasForeignKey("IdDestination")
                        .IsRequired()
                        .HasConstraintName("FK_tb_itinerary_destination");

                    b.HasOne("MyProjectAPI_Travel.Models.Station", "Origin")
                        .WithMany("Origins")
                        .HasForeignKey("IdOrigin")
                        .IsRequired()
                        .HasConstraintName("FK_tb_itinerary_origin");

                    b.HasOne("MyProjectAPI_Travel.Models.Worker", "Worker")
                        .WithMany("Itineraries")
                        .HasForeignKey("IdWrk")
                        .IsRequired()
                        .HasConstraintName("FK_tb_itinerary_worker");

                    b.Navigation("Bus");

                    b.Navigation("Destination");

                    b.Navigation("Origin");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Seat", b =>
                {
                    b.HasOne("MyProjectAPI_Travel.Models.Bus", "Bus")
                        .WithMany("Seating")
                        .HasForeignKey("IdBus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_tb_seating_bus");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Ticket", b =>
                {
                    b.HasOne("MyProjectAPI_Travel.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("IdBus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProjectAPI_Travel.Models.Itinerary", "Itinerary")
                        .WithMany()
                        .HasForeignKey("IdItn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProjectAPI_Travel.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("IdUsr")
                        .IsRequired()
                        .HasConstraintName("FK_tb_ticket_user");

                    b.HasOne("MyProjectAPI_Travel.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("IdWrk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Itinerary");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Worker", b =>
                {
                    b.HasOne("MyProjectAPI_Travel.Models.User", "User")
                        .WithOne("Worker")
                        .HasForeignKey("MyProjectAPI_Travel.Models.Worker", "IdWrk")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Bus", b =>
                {
                    b.Navigation("Itineraries");

                    b.Navigation("Seating");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Station", b =>
                {
                    b.Navigation("Destinations");

                    b.Navigation("Origins");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.User", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("MyProjectAPI_Travel.Models.Worker", b =>
                {
                    b.Navigation("Itineraries");
                });
#pragma warning restore 612, 618
        }
    }
}
